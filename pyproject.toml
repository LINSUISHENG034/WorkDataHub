[project]
name = "WorkDataHub"
version = "0.1.0"
description = "A modernized data processing platform for WorkDataHub."
authors = [{ name = "Cline", email = "cline@example.com" }]
requires-python = ">=3.10"
dependencies = [
    "dagster",
    "dagster-webserver",
    "pandas",
    "pydantic",
    "psycopg2-binary",
    "openpyxl",
    "PyYAML",
    "pydantic-settings>=2.10.1",
    "playwright>=1.55.0",
    "playwright-stealth>=2.0.0",
    "opencv-python-headless>=4.10.0.84",
    "numpy>=2.0.0",
]
 
[tool.setuptools.packages.find]
where = ["src"]
 
[project.optional-dependencies]
dev = [
    "pytest",
    "ruff",
    "mypy",
]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["E", "F", "W", "I"]

[tool.ruff.format]
quote-style = "double"

[tool.pytest.ini_options]
markers = [
    "postgres: marks tests as requiring a PostgreSQL database (deselect with '-m \"not postgres\"')",
    "monthly_data: marks tests requiring reference/monthly data (opt-in)",
    "legacy_data: marks tests as requiring legacy sample data (opt-in)",
    "sample_domain: marks tests for the non-production sample domain (sample_trustee_performance)"
]

[dependency-groups]
dev = [
    "mypy>=1.17.1",
    "pandas-stubs>=2.3.2.250827",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.12",
    "types-psycopg2>=2.9.21.20250809",
    "types-pyyaml>=6.0.12.20250822",
    "types-requests>=2.32.4.20250913",
]

[tool.mypy]
# 让 mypy 将 `src` 视为包根并避免重复模块名
mypy_path = ["src"]
explicit_package_bases = true
namespace_packages = true
