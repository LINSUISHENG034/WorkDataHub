{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(source:*)",
      "Bash(find:*)",
      "Bash(mv:*)",
      "Bash(mkdir:*)",
      "Bash(tree:*)",
      "Bash(ruff:*)",
      "Bash(touch:*)",
      "Bash(cat:*)",
      "Bash(ruff check:*)",
      "Bash(pytest:*)",
      "Bash(python:*)",
      "Bash(python -m pytest:*)",
      "Bash(python3 -m pytest:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:github.com)",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__find_symbol",
      "mcp__serena__replace_regex",
      "mcp__serena__search_for_pattern",
      "mcp__serena__insert_after_symbol",
      "mcp__serena__list_dir",
      "mcp__serena__insert_before_symbol",
      "mcp__serena__replace_symbol_body",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__think_about_collected_information",
      "mcp__serena__find_file",
      "mcp__serena__think_about_task_adherence",
      "mcp__serena__think_about_whether_you_are_done",
      "mcp__serena__find_referencing_symbols",
      "mcp__postgres__query",
      "mcp__serena__read_memory",
      "mcp__thinking__sequentialthinking",
      "WebSearch",
      "WebFetch(domain:docs.pydantic.dev)",
      "Bash(uv run:*)",
      "Bash(uv add:*)",
      "WebFetch(domain:docs.sqlalchemy.org)",
      "Bash(uv tree:*)",
      "Bash(uv sync:*)",
      "Bash(uv venv:*)",
      "Bash(pip install:*)",
      "Bash(mypy:*)",
      "Bash(PYTHONPATH=src python -m pytest tests/services/test_storage_service.py -v)",
      "mcp__serena__onboarding",
      "mcp__serena__write_memory",
      "Bash(gemini:*)",
      "WebFetch(domain:docs.dagster.io)",
      "Bash(git commit:*)",
      "Bash(del manual_test_verification.py)",
      "Bash(git add:*)",
      "Read(//e/**)",
      "Bash(WDH_MAPPINGS_DIR=\"/nonexistent/path\")",
      "Bash(set WDH_MAPPINGS_DIR=/nonexistent/path)",
      "Bash(set DAGSTER_HOME=E:ProjectsWorkDataHubdagster_home)",
      "Bash(DAGSTER_HOME=\"E:\\Projects\\WorkDataHub\\dagster_home\")",
      "Bash(set WDH_DATA_BASE_DIR=./reference/monthly)",
      "Bash(set WDH_DATA_BASE_DIR=tests/test_data)",
      "Bash(WDH_DATA_BASE_DIR=./reference/monthly uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --plan-only --max-files 1)",
      "Bash(WDH_DATA_BASE_DIR=\"./reference/monthly\" uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --max-files 1 --execute)",
      "Bash(set PYTHONPATH=)",
      "Bash(uv pip install:*)",
      "Bash(WDH_DATA_BASE_DIR=\"./reference/monthly\" uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --plan-only --max-files 1)",
      "Bash(psql:*)",
      "Bash(WDH_DATA_BASE_DIR=\"./reference/monthly\" uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --execute --max-files 1 --mode delete_insert)",
      "Bash(echo $WDH_DATA_BASE_DIR)",
      "Bash(WDH_DATA_BASE_DIR=\"./reference/monthly\" uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --mode append --plan-only --max-files 1)",
      "Bash(WDH_DATA_BASE_DIR=\"tests/fixtures/sample_data/annuity_subsets\" uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --plan-only --max-files 1 --backfill-refs all --backfill-mode insert_missing)",
      "Bash(set WDH_DATA_BASE_DIR=testsfixturessample_dataannuity_subsets)",
      "Bash(WDH_DATA_BASE_DIR=\"tests\\fixtures\\sample_data\\annuity_subsets\" uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --plan-only --max-files 1 --backfill-refs all --backfill-mode insert_missing --sheet \"规模明细\" --debug)",
      "Bash(WDH_DATA_BASE_DIR=\"tests\\fixtures\\sample_data\\annuity_subsets\" uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --plan-only --max-files 1 --backfill-refs all --backfill-mode insert_missing --sheet \"坏名字\" --debug)",
      "Bash(set WDH_DATABASE__URI=postgres://postgres:Post.169828@localhost:5432/postgres)",
      "Bash(WDH_DATA_BASE_DIR=\"tests\\fixtures\\sample_data\\annuity_subsets\" WDH_DATABASE__URI=\"postgres://postgres:Post.169828@localhost:5432/postgres\" uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --execute --max-files 1 --backfill-refs all --backfill-mode insert_missing --sheet \"规模明细\" --mode append --debug)",
      "Bash(WDH_DATA_BASE_DIR=\"tests/fixtures/sample_data/annuity_subsets\" uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --plan-only --backfill-refs all --backfill-mode insert_missing --skip-facts --sheet \"规模明细\" --debug)",
      "Bash(WDH_DATA_BASE_DIR=\"tests/fixtures/sample_data/annuity_subsets\" uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --plan-only --backfill-refs all --backfill-mode insert_missing --sheet \"规模明细\" --max-files 1)",
      "Bash(WDH_DATA_BASE_DIR=\"tests/fixtures/sample_data/annuity_subsets\" WDH_DATABASE__URI=\"postgres://postgres:Post.169828@localhost:5432/postgres\" uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --execute --backfill-refs plans --backfill-mode insert_missing --sheet \"规模明细\" --mode append --max-files 1 --skip-facts)",
      "Bash(WDH_DATA_BASE_DIR=\"tests/fixtures/sample_data/annuity_subsets\" uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --execute --backfill-refs all --skip-facts --sheet \"规模明细\" --debug --max-files 1)",
      "Bash(del db_validation_test.py)",
      "Bash(WDH_DATA_BASE_DIR=\"tests/fixtures/sample_data/annuity_subsets\" uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --plan-only --max-files 1 --backfill-refs plans --backfill-mode insert_missing --sheet \"规模明细\" --debug)",
      "Bash(WDH_DATA_BASE_DIR=\"tests/fixtures/sample_data/annuity_subsets\" WDH_DATABASE__URI=\"postgres://postgres:Post.169828@localhost:5432/postgres\" uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --execute --backfill-refs plans --backfill-mode insert_missing --sheet \"规模明细\" --mode append --max-files 1 --debug)",
      "Bash(WDH_DATA_BASE_DIR=\"tests/fixtures/sample_data/annuity_subsets\" uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --plan-only --max-files 1 --backfill-refs portfolios --backfill-mode insert_missing --sheet \"规模明细\" --debug)",
      "Bash(WDH_DATA_BASE_DIR=\"tests/fixtures/sample_data/annuity_subsets\" uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --plan-only --max-files 1 --backfill-refs all --backfill-mode insert_missing --sheet \"规模明细\" --debug)",
      "Bash(del portfolio_debug_test.py)",
      "Bash(WDH_DATA_BASE_DIR=\"tests/fixtures/sample_data/annuity_subsets\" uv run python -c \"\nfrom src.work_data_hub.io.readers.excel_reader import read_excel_rows\nfrom src.work_data_hub.domain.reference_backfill.service import derive_portfolio_candidates\n\nrows = read_excel_rows(''tests/fixtures/sample_data/annuity_subsets/2024年11月年金终稿数据_subset_append_3.xlsx'', sheet=''规模明细'')\nprint(''Raw rows:'')\nfor i, row in enumerate(rows):\n    print(f''Row {i+1}: 计划代码={row.get(\"\"计划代码\"\")}, 组合代码={row.get(\"\"组合代码\"\")}, 月度={row.get(\"\"月度\"\")}'')\n\ncandidates = derive_portfolio_candidates(rows)\nprint(f''\\nPortfolio candidates: {len(candidates)}'')\nfor candidate in candidates:\n    print(candidate)\n\")",
      "Bash(WDH_DATA_BASE_DIR=\"tests/fixtures/sample_data/annuity_subsets\" WDH_DATABASE__URI=\"postgres://postgres:Post.169828@localhost:5432/postgres\" uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --execute --backfill-refs all --backfill-mode insert_missing --sheet \"规模明细\" --mode append --max-files 1 --debug)",
      "Bash(del:*)",
      "Bash(git restore:*)",
      "Bash(WDH_DATA_BASE_DIR=\"tests/fixtures/sample_data/annuity_subsets\" uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --plan-only --max-files 1)",
      "Bash(WDH_DATA_BASE_DIR=\"tests/fixtures\" uv run python -m src.work_data_hub.orchestration.jobs --domain annuity_performance --plan-only --max-files 1)"
    ],
    "deny": []
  }
}